<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
	<property name="USER_HOME" value="${logHome}"/>
	<timestamp key="FILE_NAME" datePattern="yyyy-MM-dd-HH"/>

	<prudent>true</prudent>

	<!-- 打印到控制台-->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n</pattern>
		</encoder>
	</appender>

	<!--DEBUG-->
	<appender name="LOG-DEBUG"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<prudent>true</prudent>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${USER_HOME}/DEBUG-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
			<!-- 保存前7天的日志文件 -->
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<!--  如果超过100MB就删除-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<layout>
			<Pattern>
				[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n
			</Pattern>
		</layout>
	</appender>

	<!--WARN-->
	<appender name="LOG-WARN"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<prudent>true</prudent>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${USER_HOME}/WARN-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
			<!-- 保存前7天的日志文件 -->
			<maxHistory>7</maxHistory>
		</rollingPolicy>
		<!--  如果超过100MB就删除-->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>100MB</maxFileSize>
		</triggeringPolicy>
		<layout>
			<Pattern>
				[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n
			</Pattern>
		</layout>
	</appender>


	<!--ERROR-->
	<appender name="LOG-ERROR"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--<prudent>true</prudent>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./logs/ERROR-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            &lt;!&ndash; 保存前7天的日志文件 &ndash;&gt;
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        &lt;!&ndash;  如果超过100MB就删除&ndash;&gt;
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <layout>
            <Pattern>
                [ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n
            </Pattern>
        </layout>-->


		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<file>${USER_HOME}/ERROR.log</file>
		<!--滚动策略-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按“天”生成日志文件，"%i"代表第几个文件（从0自增），并压缩成.zip包 -->
			<fileNamePattern>${USER_HOME}/ERROR-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
			<!-- 保留15天 -->
			<maxHistory>15</maxHistory>
			<!-- 在基于时间的基础上，基于文件大小生成日志文件策略 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 单个文件不能大于100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
             &lt;!&ndash;日志文件大小限制在5kB以内，否则就触发滚动&ndash;&gt;
             <maxFileSize>5KB</maxFileSize>
         </triggeringPolicy>-->
		<encoder><!--格式化输出-->
			<pattern>[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n</pattern>
		</encoder>

	</appender>

	<!--INFO-->
	<appender name="LOG-INFO"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--<prudent>true</prudent>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <OnMatch>ACCEPT</OnMatch>
            <OnMismatch>DENY</OnMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>./logs/INFO-%d{yyyy-MM-dd-HH}.log</fileNamePattern>
            &lt;!&ndash; 保存前7天的日志文件 &ndash;&gt;
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        &lt;!&ndash;  如果超过100MB就删除&ndash;&gt;
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>100MB</maxFileSize>
        </triggeringPolicy>
        <layout>
            <Pattern>
                [ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n
            </Pattern>
        </layout>-->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<file>${USER_HOME}/INFO.log</file>
		<!--滚动策略-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按“天”生成日志文件，"%i"代表第几个文件（从0自增），并压缩成.zip包 -->
			<fileNamePattern>${USER_HOME}/INFO-%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
			<!-- 保留15天 -->
			<maxHistory>15</maxHistory>
			<!-- 在基于时间的基础上，基于文件大小生成日志文件策略 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 单个文件不能大于100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<!-- <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
             &lt;!&ndash;日志文件大小限制在5kB以内，否则就触发滚动&ndash;&gt;
             <maxFileSize>5KB</maxFileSize>
         </triggeringPolicy>-->
		<encoder><!--格式化输出-->
			<pattern>[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96}.%thread [%line] - %msg%n</pattern>
		</encoder>

	</appender>

	<!--myibatis log configure-->
	<logger name="com.apache.ibatis" level="TRACE"/>
	<logger name="java.sql.Connection" level="DEBUG"/>
	<logger name="java.sql.Statement" level="DEBUG"/>
	<logger name="java.sql.PreparedStatement" level="DEBUG"/>

	<!-- 设置日志级别 -->
	<root level="INFO">
		<appender-ref ref="LOG-DEBUG"/>
		<appender-ref ref="LOG-INFO"/>
		<appender-ref ref="LOG-WARN"/>
		<appender-ref ref="LOG-ERROR"/>
		<appender-ref ref="STDOUT"/>
	</root>

</configuration>