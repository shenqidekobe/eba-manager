package com.microBusiness.manage.util;


public enum Code {
	
	/**
	 * 成功
	 */
	code0(0, "成功"), //
	
	/**
	 * 第三，四位：01 用户模块
	 * 02 0101 - 02 0199
	 */
    code0101(0101, "用户已经存在 "), //
    code0102(0102, "验证码不正确"), //
    code0103(0103, "数据库查询没有结果"), //
    code0104(0104, "Auth Token不正确或者已经过期"), //
    code0105(0105, "验证码发送失败"), //
    code0106(0106, "密码错误 "), //
    code0107(0107, "用户不存在"), //
    code0110(0110, "手机号码格式错误"), //
    code0111(0111, "用户账户余额不足"),
    
    
    /**
	 * 第三，四位：02 商品模块
	 * 02 0201 - 02 0299
	 */
    code8323(8323, "无此订单"),
    code8324(8324, "无此商品"),
    code8325(8325, "此产品已下架"),
    code8326(8326, "用户账户余额不足"),
    code8327(8327, "用户账户扣款失败"),
    code8328(8328, "购买商品失败"),
    code8329(8329, "更新订单失败"),
    code8330(8330, "订单状态错误"),
    code8331(8331, "订单用户不符"),
    code8332(8332, "更新老等级失败"),
    
    
    
    code8601(8601, "APPLE已上线"), //
    code8602(8602, "APPLE未上线"), //
    
    code8998(8998, "输入参数错误"), //
    code8999(8999, "服务器错误"), //
    
    //收货地址code
    code010210(010210,"新增收货地址失败"),
    code010211(010211,"修改收货地址失败"),
    code010212(010212,"删除收货地址失败"),
    code010213(010213,"没有收货地址ID"),
    code010214(010214,"查找地址失败"),
    
  	code010200(010200,"收货人姓名为空"),
  	code010201(010201,"收货位置为空"),
  	code010202(010202,"收货地址为空"),
  	code010203(010203,"经度为空"),
  	code010204(010204,"纬度为空"),
  	code010205(010205,"手机号码为空"),
  	code010206(010206,"手机号码格式不正确"),
  	code010207(010207,"会员ID为空"),
    
  	//配送点code
  	code010301(010301,"查找附近配送点失败"),
  	code010302(010302,"附近没有配送点"),
  	//供应商
  	code010401(010401,"获取供应商列表失败"),
  	code010402(010402,"注册企业失败"),
    code010403(010403,"该手机号码已被占用"),
  	
  	//登录code
  	code010601(010601,"查找收货地址失败"),
  	code010602(010602,"收货地址超出配送范围"),
  	code010603(010603,"没有收货地址"),
  	code010604(010604,"选择收货位置失败"),
  	code010605(010605,"定位失败"),
  	code010606(010606,"定位超出配送距离"),
  	
  	
  	
    code3(3, "不支持此接口"), //
    code4(4, "没有权限执行此操作"), //
    code5(5, "IP未授权"), //
    code6(6, "app key为空或不存在"), //
    code100(100, "数据库连接错误"), //
    code102(102, "数据库返回空结果"), //
    code103(103, "执行异常"), //
    code110(110, "网络错误"), //
    code111(111, "暂时无法连接服务器"), //
    code113(113, "服务器不支持"), //
    code114(114, "服务不可用"), //
    code121(121, "签名错误"), //
    code122(122, "用户请求错误"), //
    code123(123, "请求数超出限额"), //
    code130(130, "用户未登陆"), //
    code131(131, "用户未激活"), //
    code132(132, "用户未授权"), //
    code136(136, "Upload Token不正确或者已经过期"), //
    code137(137, "禁止访问"), //
    code138(138, "重复请求"), //
    code139(139, "md5值不正确"), //
    code140(140, "计算md5出错"), //
    code141(141, "视频未上传成功，不能发布"), //
    code200(200, "上传文件大小超限"), //
    code201(201, "上传文件未成功"),
    code202(202, "操作失败"),
	
	//短信
	code010701(010701,"手机号格式错误"),
  	code010702(010702,"短信发送失败"),
  	code010703(010703,"验证码验证失败"),
	code010704(010704,"原手机号错误"),
	code010705(010705,"手机已被绑定"),
	code010706(010706,"超过短信发送上限"),
	
	//搜索
	code011001(011001,"请输入关键词"),
	code011002(011002,"搜索的商品不存在"),
	
	//购物车
	code11101(11101,"获取购物车失败"),
	code11102(11102,"购物车数量错误"),
	code11103(11103,"获取商品列表失败"),
	code11104(11104,"编辑购物车失败"),
	code11105(11105,"购物车为空"),
	code11106(11106,"购物中不存在该记录"),
	code11107(11107,"购物条目删除失败"),
	
	code11108(11108,"购物为空"),
	
	code111119(111119,"不能购买代理商品，购物车已经存在零售商品，请先完成下单"),
	code111120(111120,"不能购买零售商品，购物车已经存在代理商品，请先完成下单"),
	
	
	code11109(11109,"没有收货地址"),
	code11110(11110,"添加购物车失败"),
    code11111(11111,"未分配商品"),
    code11112(11112,"此订单包含已失效的供应，不能继续下单"),
    code11113(11113,"老数据不支持再来一单"),
    code11114(11114,"供应过期"),
  
	 //优惠券
	code011301(011301,"获取优惠券失败"),
	code011302(011302,"当前没有优惠券"),
	code011303(011303,"领取优惠券失败"),
	//商品
	code011401(011401,"获取商品详情失败"),
    //用户码
    code010101(10101, "获取用户信息异常"),

    //未知异常
    code019999(19999,"未知异常"),
    code019998(19998,"参数异常"),
    code019997(19997,"校验异常"),
    code019996(19996,"数据库操作异常"),
	
	//***********门店端*********************
    //用户码
    code01700(01700, "debug参数不能为空"),
    code01701(01701, "请输入您的用户名"),
    code01702(01702, "请输入您的密码"),
    code01703(01703, "此账号不存在"),
    code01704(01704, "此账号已被禁用"),
    code01705(01705, "此账号已被锁定"),
    code01706(01706, "密码错误，若连续5次密码错误账号将被锁定"),
    code01707(01707, "用户名或密码错误"),
    code01710(01710, "Auth Token不能为空"),
    code01711(01711, "Auth Token不正确或者已经过期"),

    
    code11710(11710, "获取助手供应商失败"),
    code11711(11711, "不能重复添加同一个主题的供应商"),
    code11712(11712, "新建供应商失败"),
    code11713(11713, "编辑供应商失败"),
    code11714(11714, "编辑供应商时获取供应商信息失败"),
    code11715(11715, "该供应商存在商品，删除失败"),
    code11716(11716, "店铺名称重复"),
    code11717(11717, "未认证企业只能开2家店，请登录www.dinghuo.me/admin做企业认证，如有疑问请拨打400-8869-219"),
    code11718(11718, "请去“我的-企业信息”处注册企业，认证完成后可继续开店，如有疑问请拨打400-8869-219"),
    
    code12000(12000, "获取收货地址信息失败"),
    code12001(12001, "已存在收货地址，新增收货地址失败"),
    code12002(12002, "新增收货地址失败"),
    code12003(12003, "修改收货地址失败"),
    code12004(12004, "删除收货地址失败"),
    code12005(12005, "收货地址不存在"),
    
    //助手商品
    code13001(13001, "供应商不能为空！"),
    code13002(13002, "商品名称不能为空！"),
    code13003(13003, "数据错误!"),
    code13004(13004, "供应商不存在!"),
    code13005(13005, "商品删除失败！"),
    code13006(13006, "商品添加失败！"),
    code13007(13007, "商品名称不能重复！"),
    code13008(13008, "商品为空！"),
    code13009(13009, "商品复制失败！"),
    code13010(13010, "该目录下已经存在同名商品，请更改后再进行复制"),
    code13011(13011, "商品不存在！"),
    code13012(13012, "条形码不存在"),
    code13013(13013, "尝试重新选择分类和规格"),
    
    code14000(14000, "form添加失败！"),
    
    code15000(15000, "保存名片失败！"),
    
    code16000(16000, "名片已存在！"),
    code16001(16001, "编辑名片失败！"),
    
    code17000(17000, "获取同步人列表失败！"),
    code17001(17001, "获取同步次数失败！"),
    
    code17801(17801, "不能重复添加同一个客户"),
    code17802(17802, "不能添加自己企业为客户"),
    code17803(17803, "客户已被暂停"),
    
    code18800(18800, "不能重复添加同一个体"),
    
    code18801(18801, "存在进行中的盘点单，不能完成此盘点单操作"),
    code18802(18802, "存在进行中的盘点单，不能完成商品入库操作"),
    code18803(18803, "盘点单创建失败！"),
    code18804(18804, "复制原料库分类失败！"),
    
    //订单错误

    code_order_011801(11801 , "订单过期"),
    code_order_011802(11802 , "订单锁定"),
    code_order_011803(11803 , "订单状态错误"),
    code_order_011804(11804 , "订单修改次数超过限制"),
	
	//文件上传
	code_upload_011901(11901 , "操作错误"),
	code_upload_011902(11902 , "上传文件大小或格式不正确"),
	code_upload_011903(11903 , "上传文件出现错误"),
	
	//发货信息
	code_shipping_012001(12001 , "没有发货信息"),
	code_shipping_012002(12002 , "没有发货的商品信息"),
	
	//扫描发货单二维码
	code_scanning_014001(14001 , "您无权操作此订单！"),
	code_logistics_14002(14002 , "收货已经确认"),
	
	//微商小管理分享助手
	code_asslist_11110(11110 , "更改状态参数有误"),
	code_asslist_11111(11111 , "此清单不属于本用户"),
	code_asslist_11112(11112 , "清单状态有误"),
	code_asslist_11113(11113 , "创建清单失败"),
	code_asslist_11114(11114 , "没有创建收货地址"),
	code_asslist_11115(11115 , "清单已删除"),
	code_asslist_11116(11116 , "商品目录已删除"),
	code_asslist_11117(11117 , "再来一单失败"),
	code_asslist_11118(11118 , "地址不能为空"),
	
	code_customer_11110(11110 , "此供应商不属于本用户"),
	code_customer_11111(11111 , "此供应商没有分享"),
	code_customer_11112(11112 , "此分享不属于本用户"),
	
	code_assgoods_11110(11110 , "sn重复，分享失败！"),
	code_assgoods_11111(11111 , "此商品没有分享"),
	
	code_card_11110(11110 , "收藏名片失败"),
	code_card_11111(11111 , "该名片已收藏"),
	
	//定货么分享助手绑定手机号
	code_assbindphome_100001(100001 , "请输入绑定手机号"),
	code_assbindphome_100002(100002 , "该手机号在微商小管理系统没有绑定"),
	code_assbindphome_100003(100003 , "验证码错误"),
	code_assbindphome_100004(100004 , "手机号与验证码不匹配"),
	code_assbindphome_100005(100005 , "验证码过期"),
	code_assbindphome_100006(100006 , "该手机号已经绑定过了，不能在绑定了"),
	
	//定货么分享助手企业商品目录
	code_goods_catalog_100001(100001 , "目录不存在"),
	code_goods_catalog_100002(100002 , "商品不存在"),
	
	//定货么小程序地址管理
	code_small_address_100001(100001 , "地址id不能为空"),
	code_small_address_100002(100002 , "收货人姓名不能为空"),
	code_small_address_100003(100003 , "手机号为空"),
	code_small_address_100004(100004 , "手机号输入不符合规范"),
	code_small_address_100005(100005 , "详细地址信息为空"),
	code_small_address_100006(100006 , "省市区不能为空"),
	code_small_address_100007(100007 , "企业信息不存在"),
	
	//订货助理我的客户
	code_business_customers_100001(100001 , "该客户与本企业存在供应关系，不可删除"),
	
	// 微商小管理订单接口错误码说明
	code100000(100000, "appId为空或不存在"),
	code100001(100001, "网络错误"),
	code100002(100002, "签名错误"),
	code100003(100003, "未知异常"),
	code100004(100004, "参数异常"),
	code100005(100005, "校验异常"),
	code100006(100006, "请求失效"),
	code200001(200001, "发货失败"),
	code200002(200002, "总发货数量不能小于等于0"),
	code200003(200003, "物流必填"),
	code200004(200004, "发货数量不能小于等于0"),
	code200005(200005, "发货数量不能大于总发货数量"),
	code200006(200006, "订单关联商品不存在"),
	code200007(200007, "发货数量不能大于商品实际数量"),
	code200008(200008, "无效的发货"),
	code200009(200009, "无效的物流"),
	
	code_clerk_100001(100001,"店员姓名不能为空"),
	code_clerk_100002(100002,"手机号不能为空"),
	code_clerk_100003(100003,"店员不存在"),
	code_clerk_100004(100004,"手机号格式不正确"),
	code_clerk_100005(100005,"该手机号已存在，不能重复添加"),
	code_clerk_100006(100006,"手机号不能是当前主账号"),
	code_clerk_100007(100007,"该店员已被托管，不能删除"),
	
	code_small_distribution_100001(100001,"门店不存在"),
	
	code_small_specification_100001(100001,"规格名称不能为空"),
	code_small_specification_100002(100002,"规格不存在"),
	code_small_specification_100003(100003,"规格名称不能重复"),
	
	code_small_supplier_100001(100001,"供应商名称不能为空"),
	code_small_supplier_100002(100002,"供应商名称已存在"),
	code_small_supplier_100003(100003,"该供应商存在已分配商品，不能直接删除"),
	
	code_small_category_100001(100001,"分类不存在"),
	code_small_category_100002(100002,"分类不能超过三级"),
	code_small_category_100003(100003,"该分类下存在子分类，不能删除！"),
	code_small_category_100004(100004,"该分类下存在商品，不能被删除！"),
	code_small_category_100005(100005,"分类名称不能重复"),
	
	//订单分享
	code_order_11110(11110 , "更改状态参数有误"),
	code_order_11112(11112 , "订单状态有误"),
	code_order_11113(11115 , "订单已删除"),
	
	code_small_good_100001(100001,"商品编号已存在"),
	code_small_good_100002(100002,"该商品已经分配，不能删除"),
	
	code_public_check_15000(15000 , "请关注“微商小管理”公众号，“激活通知”处激活订单消息通知"),
	
	
	code_public_check_260000(260000 , "您已经申请过代理！"),
	
	code_smOpenId_null_99899(99899 , "小程序用户标识不能为空！"),
	
	
	
	code_payment_error(998990 , "微信支付报错！");
	
    private int    httpCode; // 对应的httpcode，参照用
    private int    code;    // 业务code
    private String desc;    // 描述信息

    Code(int httpCode, int code, String desc) {
        this.httpCode = httpCode;
        this.code = code;
        this.desc = desc;
    }
    
    Code(int code, String desc) {
        this.code = code;
        this.desc = desc;
    }

    /**
     * 成功
     * @param code
     * @return
     */
    public static boolean isSuccess(int code) {
        if (code == code0.getCode()) {
            return true;
        }
        return false;
    }


    public int getHttpCode() {
        return httpCode;
    }

    public void setHttpCode(int httpCode) {
        this.httpCode = httpCode;
    }

    public int getCode() {
        return code;
    }

    public void setCode(int code) {
        this.code = code;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    public static int getHttpCodeByCode(int code) {
    	Code[] codes = Code.values();
    	for (Code c:codes) {
    		if (c.getCode() == code) {
    			return c.getHttpCode();    			
    		}
    	}
    	return Code.code8999.httpCode;
    }
}
